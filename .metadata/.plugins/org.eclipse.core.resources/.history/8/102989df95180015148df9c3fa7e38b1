extern crate piston;
extern crate graphics;
extern crate glutin_window;
extern crate opengl_graphics;

use piston::window:WindowSettings;
using piston::event::*;
use glutin_window::GlutinWindow as Window;
use opengl_graphics::{ GlGraphics, OpenGL };

use piston_window::*;

fn main() {
	let window: PistonWindow =
		WindowSettings::new("Hello Piston!", [640, 480])
		.exit_on_esc(true).into();
	for e in window {
		e.draw_2d(|c, g| {
			clear([1.0; 4], g);
			rectangle([1.0, 0.0, 0.0, 1.0],
					  [0.0, 0.0, 100.0, 100.0],
					  c.transform, g);
			});
	}
}
